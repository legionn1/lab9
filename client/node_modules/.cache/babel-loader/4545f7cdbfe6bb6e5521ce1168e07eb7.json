{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\\\u0423\\u0447\\u0451\\u0431\\u0430\\\\\\u0421\\u0435\\u0440\\u0432\\u0435\\u0440\\u043D\\u044B\\u0435\\\\lab9\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      query GetLaunch {\\n        launch(id: 56) {\\n          id\\n          mission {\\n            name\\n          }\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport gql from 'graphql-tag';\nvar cache = new InMemoryCache();\nvar link = new HttpLink({\n  uri: 'http://localhost:4000/'\n});\nvar client = new ApolloClient({\n  cache: cache,\n  link: link\n});\nclient.query({\n  query: gql(_templateObject())\n}).then(function (result) {\n  return console.log(result);\n});","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Учёба/Серверные/lab9/client/src/index.tsx"],"names":["ApolloClient","InMemoryCache","HttpLink","gql","cache","link","uri","client","query","then","result","console","log"],"mappings":";;;;;;;;;;;;AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAAqD,uBAArD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,IAAMC,KAAK,GAAG,IAAIH,aAAJ,EAAd;AACA,IAAMI,IAAI,GAAG,IAAIH,QAAJ,CAAa;AACxBI,EAAAA,GAAG,EAAE;AADmB,CAAb,CAAb;AAIA,IAAMC,MAA2C,GAAG,IAAIP,YAAJ,CAAiB;AACnEI,EAAAA,KAAK,EAALA,KADmE;AAEnEC,EAAAA,IAAI,EAAJA;AAFmE,CAAjB,CAApD;AAMAE,MAAM,CACHC,KADH,CACS;AACLA,EAAAA,KAAK,EAAEL,GAAF;AADA,CADT,EAaGM,IAbH,CAaQ,UAAAC,MAAM;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAJ;AAAA,CAbd","sourcesContent":["import { ApolloClient } from 'apollo-client';\r\nimport { InMemoryCache, NormalizedCacheObject } from 'apollo-cache-inmemory';\r\nimport { HttpLink } from 'apollo-link-http';\r\nimport gql from 'graphql-tag';\r\nconst cache = new InMemoryCache();\r\nconst link = new HttpLink({\r\n  uri: 'http://localhost:4000/'\r\n});\r\n\r\nconst client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\r\n  cache,\r\n  link,\r\n  \r\n});\r\n\r\nclient\r\n  .query({\r\n    query: gql`\r\n      query GetLaunch {\r\n        launch(id: 56) {\r\n          id\r\n          mission {\r\n            name\r\n          }\r\n        }\r\n      }\r\n    `\r\n  })\r\n  .then(result => console.log(result));"]},"metadata":{},"sourceType":"module"}