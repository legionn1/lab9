{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n} // === Symbol Support ===\n\n\nvar hasSymbols = function hasSymbols() {\n  return typeof Symbol === 'function';\n};\n\nvar hasSymbol = function hasSymbol(name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\n\nvar getSymbol = function getSymbol(name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n  if (value == null) return undefined;\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n\n  if (!queue) {\n    return;\n  }\n\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({\n      type: type,\n      value: value\n    });\n\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{\n      type: type,\n      value: value\n    }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription = function () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription); // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n\n\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: 'unsubscribe',\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: 'closed',\n    get: function get() {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver = function () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: 'next',\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: 'error',\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: 'complete',\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: 'closed',\n    get: function get() {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable = exports.Observable = function () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: 'subscribe',\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: 'forEach',\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function next(value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: 'map',\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function next(value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function error(e) {\n            observer.error(e);\n          },\n          complete: function complete() {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'filter',\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function next(value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function error(e) {\n            observer.error(e);\n          },\n          complete: function complete() {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'reduce',\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function next(value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function error(e) {\n            observer.error(e);\n          },\n          complete: function complete() {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'concat',\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscription = void 0;\n        var index = 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function next(v) {\n              observer.next(v);\n            },\n            error: function error(e) {\n              observer.error(e);\n            },\n            complete: function complete() {\n              if (index === sources.length) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources[index++]));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: 'flatMap',\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function next(value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function next(value) {\n                observer.next(value);\n              },\n              error: function error(e) {\n                observer.error(e);\n              },\n              complete: function complete() {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n            subscriptions.push(inner);\n          },\n          error: function error(e) {\n            observer.error(e);\n          },\n          complete: function complete() {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: SymbolObservable,\n    value: function value() {\n      return this;\n    }\n  }], [{\n    key: 'from',\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n      if (x == null) throw new TypeError(x + ' is not an object');\n      var method = getMethod(x, SymbolObservable);\n\n      if (method) {\n        var observable = method.call(x);\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n        if (isObservable(observable) && observable.constructor === C) return observable;\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, SymbolIterator);\n\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var item = _step.value;\n                  observer.next(item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: 'of',\n    value: function of() {\n      for (var _len2 = arguments.length, items = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: SymbolSpecies,\n    get: function get() {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Учёба/Серверные/lab9/client/node_modules/zen-observable/lib/Observable.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","hasSymbols","Symbol","hasSymbol","name","Boolean","getSymbol","observable","SymbolIterator","SymbolObservable","SymbolSpecies","getMethod","obj","undefined","getSpecies","ctor","constructor","Observable","isObservable","x","hostReportError","e","log","setTimeout","enqueue","fn","Promise","resolve","then","cleanupSubscription","subscription","cleanup","_cleanup","unsubscribe","call","closeSubscription","_observer","_queue","_state","flushSubscription","queue","notifySubscription","type","observer","m","onNotify","push","Subscription","subscriber","subscriptionObserver","SubscriptionObserver","error","get","_subscription","next","complete","_subscriber","subscribe","arguments","forEach","_this","reject","done","map","_this2","C","filter","_this3","reduce","_this4","hasSeed","hasValue","seed","acc","first","concat","_this5","_len","sources","Array","_key","index","startNext","v","from","flatMap","_this6","subscriptions","outer","inner","indexOf","splice","completeIfDone","closed","s","method","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","iterator","_step","item","err","return","isArray","of","_len2","items","_key2","symbol"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// === Symbol Support ===\n\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species');\n\n// === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n\n  if (value == null) return undefined;\n\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n  if (!queue) {\n    return;\n  }\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({ type: type, value: value });\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{ type: type, value: value }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription = function () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: 'unsubscribe',\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver = function () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: 'next',\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: 'error',\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: 'complete',\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable = exports.Observable = function () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: 'subscribe',\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: 'forEach',\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: 'map',\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'filter',\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'reduce',\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'concat',\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscription = void 0;\n        var index = 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (index === sources.length) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources[index++]));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: 'flatMap',\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: SymbolObservable,\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: 'from',\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n\n      if (x == null) throw new TypeError(x + ' is not an object');\n\n      var method = getMethod(x, SymbolObservable);\n      if (method) {\n        var observable = method.call(x);\n\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n\n        if (isObservable(observable) && observable.constructor === C) return observable;\n\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, SymbolIterator);\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var item = _step.value;\n\n                  observer.next(item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: 'of',\n    value: function of() {\n      for (var _len2 = arguments.length, items = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}"]},"metadata":{},"sourceType":"script"}